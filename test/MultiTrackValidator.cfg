process MULTITRACKVALIDATOR = {

    include "FWCore/MessageService/data/MessageLogger.cfi"
    replace MessageLogger.categories     = { "TrackAssociator","TrackValidator" }
    replace MessageLogger.debugModules   = { "*" }
    replace MessageLogger.cout = {
        untracked string threshold = "INFO"
	untracked PSet default   = { untracked int32 limit = 0 }
	untracked PSet TrackAssociator = { untracked int32 limit = -1 }
	untracked PSet TrackValidator = { untracked int32 limit = -1 }
    }
    replace MessageLogger.cerr = { untracked bool placeholder = true }

    untracked PSet maxEvents = {untracked int32 input = 100}
    source = PoolSource { 
	untracked vstring fileNames = {
	    'file:single_mu_10_1.root'
	}
    }

    module evtInfo = AsciiOutputModule {}

    # Track Associators
    include "SimTracker/TrackAssociation/data/TrackAssociatorByChi2.cfi"
    include "SimTracker/TrackAssociation/data/TrackAssociatorByHits.cfi"

    # Filters: 
    #NB: default cuts for reco tracks are dummy: please replace cuts according to your use case!
    include "Validation/RecoTrack/data/cuts.cff"
    #The following cut were used to produce TDR plots
    #replace cutsCKF.ptMin = 0.8
    #replace cutsCKF.minRapidity =-2.5
    #replace cutsCKF.maxRapidity = 2.5
    #replace cutsCKF.tip = 3.5
    #replace cutsCKF.lip = 30
    #replace cutsCKF.minHit = 8
    #replace cutsCKF.maxChi2 = 10000 #not used in tdr

    #replace cutsTPEffic.src = trackingtruthprod
    #replace cutsTPFake.src = trackingtruthprod
   
    # Track Validator    
    include "Validation/RecoTrack/data/MultiTrackValidator.cff"
    #replace multiTrackValidator.associators = {"TrackAssociatorByChi2"}
    #replace multiTrackValidator.label = {cutsCKF}
    #replace multiTrackValidator.out = "file.root"

    # Tracking Truth and mixing module, if needed
    #include "SimGeneral/MixingModule/data/mix_none.cfi"
    #include "SimGeneral/TrackingAnalysis/data/trackingParticles.cfi"

    path p = {cutsCKF,cutsRS,cutsTPEffic,cutsTPFake,multiTrackValidator}
    
    endpath ep = {
	evtInfo
    }
}
