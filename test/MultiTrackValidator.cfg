process MULTITRACKVALIDATOR = {

    include "FWCore/MessageService/data/MessageLogger.cfi"
    #service = MessageLogger
    #{
    #untracked vstring destinations = {"cout"}
    #	untracked vstring categories    = { "TrackAssociator","TrackValidator" }
    #	#untracked vstring categories    = { "TrackValidator" }
    #	untracked vstring debugModules = {"multiTrackValidator"}
    #untracked PSet cout            = {
    #untracked string threshold = "DEBUG"
    #	    #untracked PSet default   = { untracked int32 limit = 10000000  }
    #	    #untracked PSet FwkJob    = { untracked int32 limit = 0 }
    #	    #untracked PSet DDLParser = { untracked int32 limit = 0 }
    #untracked PSet default   = { untracked int32 limit = 0  }
    #	    untracked PSet INFO   = { untracked int32 limit = 0  }
    #	    untracked PSet DEBUG  = { untracked int32 limit = 0  }
    #	    untracked PSet TrackAssociator = { untracked int32 limit = 10000000 }
    #	    untracked PSet TrackValidator = { untracked int32 limit = 10000000 }
    #}
    #}

    source = PoolSource { 
	untracked vstring fileNames = {
	    'file:single_mu_10_1.root'
	}
	untracked int32 maxEvents = -1
	#untracked PSet maxEvents = {untracked int32 input = -1}
    }

    module evtInfo = AsciiOutputModule {}

    # Track Validator    
    include "Validation/RecoTrack/data/MultiTrackValidator.cff"
    #replace multiTrackValidator.associators = {"TrackAssociatorByChi2"}
    #replace multiTrackValidator.label = {"ctfWithMaterialTracks"}
    #replace multiTrackValidator.label_tp = trackingtruth:TrackTruth
    #replace multiTrackValidator.out = "file.root"

    # Tracking Truth
    #include "SimGeneral/TrackingAnalysis/data/trackingtruth.cfi"
    #replace trackingtruth.HepMCDataLabels = {"source"}
    #include "SimGeneral/TrackingAnalysis/data/trackingParticles.cfi"

    # Track Associators
    include "SimTracker/TrackAssociation/data/TrackAssociatorByChi2.cfi"
    include "SimTracker/TrackAssociation/data/TrackAssociatorByHits.cfi"

    #path p = {trackingtruth,multiTrackValidator}
    #path p = {trackingParticles,multiTrackValidator}
    path p = {multiTrackValidator}
    
    endpath ep = {
	evtInfo
    }
}
