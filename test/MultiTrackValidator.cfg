process MULTITRACKVALIDATOR = {

#    service = MessageLogger
#    {
#	untracked vstring destinations = {"cout"}
#	untracked vstring categories    = { "TrackAssociator","TrackValidator" }
#	#untracked vstring categories    = { "TrackValidator" }
#	untracked vstring debugModules = {"multiTrackValidator"}
#	untracked PSet cout            = {
#	    untracked string threshold = "DEBUG"
#	    #untracked PSet default   = { untracked int32 limit = 10000000  }
#	    #untracked PSet FwkJob    = { untracked int32 limit = 0 }
#	    #untracked PSet DDLParser = { untracked int32 limit = 0 }
#	    #untracked PSet default   = { untracked int32 limit = 0  }
#	    untracked PSet INFO   = { untracked int32 limit = 0  }
#	    untracked PSet DEBUG  = { untracked int32 limit = 0  }
#	    untracked PSet TrackAssociator = { untracked int32 limit = 10000000 }
#	    untracked PSet TrackValidator = { untracked int32 limit = 10000000 }
#	}
#    }

    #service = AdaptorConfig {}

    source = PoolSource { 
	untracked vstring fileNames = {
	    "file:single_mu_10_1.root"
	}
	untracked int32 MaxEvents = -1
    }

    module evtInfo = AsciiOutputModule {}

    service = DaqMonitorROOTBackEnd{ }

    # Track Validator    
    include "Validation/RecoTrack/data/MultiTrackValidator.cff"
    #replace multiTrackValidator.associators = {"TrackAssociatorByChi2"}
    #replace multiTrackValidator.label = {"ctfWithMaterialTracks"}
    #replace multiTrackValidator.minpt = 0.8
    #replace multiTrackValidator.nint  = 25

    # Tracking Truth
    include "SimGeneral/TrackingAnalysis/data/trackingtruth.cfi"
    #replace trackingtruth.HepMCDataLabels = {"source"}

    es_module = TrackAssociatorByChi2ESProducer {
	double chi2cut = 25
	bool onlyDiagonal = false
    }
    es_module = TrackAssociatorByHitsESProducer 
    {
	bool associateStrip = true
	bool associatePixel = true
	vstring ROUList = {
	    #For running only strip or pixel comment out the appropriate strings
	    #TIB
	    "TrackerHitsTIBLowTof","TrackerHitsTIBHighTof",
	    #TID
	    "TrackerHitsTIDLowTof","TrackerHitsTIDHighTof",
	    #TOB
	    "TrackerHitsTOBLowTof","TrackerHitsTOBHighTof",
	    #TEC
	    "TrackerHitsTECLowTof","TrackerHitsTECHighTof",
	    #BPIX
	    "TrackerHitsPixelBarrelLowTof","TrackerHitsPixelBarrelHighTof",
	    #FPIX
	    "TrackerHitsPixelEndcapLowTof","TrackerHitsPixelEndcapHighTof"}
    }

    path p = {trackingtruth,multiTrackValidator}
    
    endpath ep = {
	evtInfo
    }
}
